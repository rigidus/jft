# -*- mode: org; -*-
#+STARTUP: showall indent hidestars

#+TITLE: JFT programming language

* Intro

Сложность инструментария программирования растет, а мой мозг - нет. Можно специализироваться в какой-то узкой области, либо попытаться кардинально упростить инструменты, построив из них конструкцию, которая может поместиться в одной голове.

Попробуем избавиться от всего лишнего и начать с нуля, стараясь делать все компактно и ясно, и кто знает, куда приведет эта дорога? "Сделай понятно или стань умней пытаясь!"

Цель проекта:
- сделать понятую инструментированную систему программирования, умещающуюся в голове одного человека, с хорошим соотношением усилий к результату,
- кроссплатформенную, насколько возможно,
- полезную для серьезных задач,
- реализовать на ней прикладные приложения аналогичные популярным,
- хорошо развлечься и узнать много нового

* Plan
** Abstract assembler

В качестве фундамента всего проекта нужен некоторый "абстрактный ассемблер", который может быть скомпилирован для почти любой архитектуры, которая имееет регистры, стек и память. Предполагается, что это будет некоторое общее подмножество ассемблера x86 и ARM. Можно абстрагироваться от размера машинного слова и конкретных имен регистров и ограничиться минимальным набором команд

[[file:aasm.org][Abstract Assembler]]

** Minimal forth machine

На абстрактном ассемблере мы пишем минимальную форт-машину, которая дает нам некоторые удобства: словарь, низкоуровневые и составные процедуры, минимальные отладочные средства, такие как монитор.

Эта работа вдохновлена ~jonesforth~

[[file:mfm.org][Minimal Forth Maсhine]]

** Forth assembler

Это инструменты ассемблирования высокоуровневого кода в код целевой машины. На них опирается JIT и AOT компиляция и кросс-компиляция. Вместе с семплирующим отладчиком и компиляцией самых "горячих" слов словаря можно получить лучшую производительность. Основаная решаема задача: распределение ресурсов, в частности регистров.

[[file:fasm.org][Forth Assembler]]

** Garbage Collector

Нужен для написания более высокоуровневых языков и вместе с JIT-компилятором минимизирует размер словаря и количество промахов кэша.

[[file:gc.org][Garbage Collector]]

** Minimal Lisp System

Минимальная лисп-система, которая будет основой для построения языков предметной области и инструментов, таких как анализаторы кода.

Эта работа вдохновлена MAL (https://github.com/kanaka/mal)

[[file:mls.org][Minimal Lisp System]]

** IDEmacs

Forth-REPL сликом минималистичен и даже не имеет истории команд, а хочется больше удобства, поэтому нужен консольный emacs-подобный редактор кода и командный интерфейс к отладчику, чтобы получить удобства к которым я привык в Emacs-e но с доступом к самым низкоуровневым деталям реализации.

Также реализация основного подмножества emacs-lisp и системы плагинов для работы emacs-packages. Реализовать как плагины:
- подсветку синтаксиса для нескольких языков
- интерактивный отладчик
- инструменты визуального программирования и анализа кода

[[file:idemacs.org][IDEmacs]]

** Archiver and Unpacker

Архиватор и распаковщик, в том числе времени выполнения, для сжатия словаря форт-машины (для экспериментов по помещению ядра словаря в кэш процессора)

[[file:archipack.org][ArchiPack]]

** Disassembler

Быстрее и проще написать на подмножестве emacs-lisp, для использования в IDEmacs, и он должен быть написан для каждой из поддерживаемых архитектур.

Эта работа вдохновлена [[https://hex-rays.com/ida-free/][IDA]]

[[file:disasm.org][Disassembler]]

** Sampling debugger

Сэмплирующий отладчик нужен для анализа производительности и поиска "горячих" слов для JIT-компиляции

[[file:sdbg.org][Sampling debugger]]

** JIT-compiler

Для минимизации оверхеда от FortVM и общего улучшения производительности.

[[file:jit.org][JIT-compiler]]

** Prolog-like solver (SAT) and Planner features

Решатели для разных применений, в том числе для верификации кода

[[file:solver.org][Solver]]

** Database

Миниатюрная база данных с поддержкой языка запросов. Для удобства работы анализаторов кода

[[file:db.org][Database]]

** Classic computer games

Просто для развлечения

[[file:games.org][Games]]

** Emulation debugger

Эмулирующий отладчик нужен для эмуляции виртуальной машины из классической книги Кнута (TAOCP)

[[file:emdbg.org][Emulation debugger]]

** Code analyzers and sanitizers

Для более эффективного программирования

[[file:sanit.org][Sanitizer]]

** Smart keyboard

Применение всего реализованного для hardware-проекта программируемой клавиатуры

[[file:keyb.org][Smart Keyboard]]

** Supercompiler

Реализация идей языка РЕФАЛ

[[file:supercompiler.org][Supercompiler]]

** GUImacs

Графическая реализация IDEmacs и сопутствующая библиотка

[[file:guimacs.org][GUImacs]]

** ImageViewer

Приложения просмотра изображений с поддержкой простых форматов картинок

[[file:imgview.org][ImageViewer]]

** GeoMaps

Приложение карт с построением маршрутов

[[file:maps.org][GeoMaps]]
